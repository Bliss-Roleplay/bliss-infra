- name: Get a list of container directories
  delegate_to: localhost
  become: false
  find:
    paths: "roles/containers"
    patterns: "defaults"
    file_type: directory
    recurse: yes
    depth: 4
  register: container_dirs

- name: Get a list of container defaults
  delegate_to: localhost
  become: false
  set_fact:
    container_defaults: "{{ container_defaults | default([]) + [ (lookup('template', item.path + '/main.yml') | from_yaml) ] }}"
  with_items: "{{ container_dirs.files }}"

- name: Get a list of container names from defaults (str)
  delegate_to: localhost
  become: false
  set_fact:
    container_names: "{{ container_names | default([]) + [ item.container | string ] }}"
  when: item.container | type_debug != "list"
  with_items: "{{ container_defaults }}"

- name: Get a list of container names from defaults (list)
  delegate_to: localhost
  become: false
  set_fact:
    container_names: "{{ container_names | default([]) + item.container }}"
  when: item.container | type_debug == "list"
  with_items: "{{ container_defaults }}"

- name: Get a list of container names known to docker
  command: docker ps --format "{{ '{{' }} .Names {{ '}}' }}"
  register: container_list

- name: Remove inactive containers
  docker_container:
    name: "{{ item }}"
    state: absent
  when: not item in container_names
  loop: "{{ container_list.stdout_lines }}"