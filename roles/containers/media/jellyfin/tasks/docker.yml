- name: Create / Run {{ container }} container
  docker_container:
    name: "{{ container }}"
    image: lscr.io/linuxserver/jellyfin:latest
    networks:
      - name: "swag_{{ network }}_bridge"
      # - name: "docker_macvlan"
      #   ipv4_address: "{{ (netplan_base, 24) | join('.') }}"
    pull: true
    state: started
    env:
      PUID: "{{ target_username_puid }}"
      PGID: "{{ target_username_pgid }}"
      TZ: "{{ timezone }}"
      # JELLYFIN_PublishedServerUrl: 192.168.0.24
    ports:
      - 8096:8096
      # - 7359:7359/udp #optional
      # - 1900:1900/udp #optional
    volumes:
      - "{{ docker_dir }}/{{ container }}/config:/config"
      - "{{ docker_dir }}/{{ container }}/cache:/cache"
      - "{{ mergerfs_root }}/media/tv:/data/tvshows"
    restart_policy: unless-stopped

- name: Set target_container to {{ container }}
  set_fact:
    target_container: "{{ container }}"

- include_tasks: get_single_docker_container_ready.yml

- name: Set {{ container }} url
  set_fact:
    jellyfin_url: "{{ subdomain }}.{{ swag_network_domains[network] }}"

- name: Wait until {{ container }} web portal is available
  uri:
    url: "https://{{ jellyfin_url }}"
    method: GET
    status_code: 200
  register: result
  until: result.status == 200
  retries: 5
  delay: 5