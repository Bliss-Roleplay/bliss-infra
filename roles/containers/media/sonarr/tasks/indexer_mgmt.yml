---
- name: Retrieve jackett indexers
  uri:
    url: "https://{{ jackett_domain }}/api/v2.0/indexers?configured=true"
    method: GET
    headers:
      Cookie: "{{ jackett_cookie }}"
  register: jackett_indexers_resp

- name: Extract jackett indexers from response
  set_fact:
    jackett_indexers: "{{ jackett_indexers_resp.json }}"

- name: Retrieve {{ container }} indexers
  uri:
    url: "https://{{ sonarr_domain }}/api/v3/indexer"
    method: GET
    headers:
      X-Api-Key: "{{ sonarr_api_key }}"
  register: sonarr_indexers_resp

- name: Get existing {{ container }} indexer names
  set_fact:
    sonarr_indexers_existing: "{{ sonarr_indexers_resp.json | selectattr('name', 'defined') | map(attribute='name') }}"

- name: Setup {{ container }} indexers
  set_fact:
    sonarr_indexers: "{{ sonarr_indexers | default([]) + [ indexer | combine(indexer_defaults) | combine({ 'fields': { 'categories': category.tv.includes | difference(category.tv.excludes) | map(attribute='ID'), 'animeCategories': category.anime.includes | difference(category.anime.excludes) | map(attribute='ID') } | combine(indexer_defaults.fields) | combine(indexer.fields) }) ] }}"
  loop: "{{ jackett_indexers }}"
  when: not (indexer.name in sonarr_indexers_existing)
  vars:
    indexer:
      name: "{{ jackett_indexer_prefix }}-{{ item.id }}"
      fields:
        baseUrl: "https://{{ jackett_domain }}/api/v2.0/indexers/{{ item.id }}/results/torznab"
        apiKey: "{{ jackett_api_key }}"
    category:
      tv:
        includes: "{{ item.caps | selectattr('Name', 'search', [ '(?=.*' ] | product(tv_categories.include | map('join', ')(?=.*')) | map('join') | list | product([ ')' ]) | map('join') | list | join('|'), ignorecase=True) | unique }}"
        excludes: "{% if tv_categories.exclude | length > 0 %}{{ item.caps | selectattr('Name', 'search', [ '(?=.*' ] | product(tv_categories.exclude | map('join', ')(?=.*')) | map('join') | list | product([ ')' ]) | map('join') | list | join('|'), ignorecase=True) | unique }}{% else %}{{ [] }}{% endif %}"
      anime:
        includes: "{{ item.caps | selectattr('Name', 'search', [ '(?=.*' ] | product(anime_categories.include | map('join', ')(?=.*')) | map('join') | list | product([ ')' ]) | map('join') | list | join('|'), ignorecase=True) | unique }}"
        excludes: "{% if anime_categories.exclude | length > 0 %}{{ item.caps | selectattr('Name', 'search', [ '(?=.*' ] | product(anime_categories.exclude | map('join', ')(?=.*')) | map('join') | list | product([ ')' ]) | map('join') | list | join('|'), ignorecase=True) | unique }}{% else %}{{ [] }}{% endif %}"

- name: Add {{ container }} indexers
  uri:
    url: "https://{{ sonarr_domain }}/api/v3/indexer"
    method: POST
    body_format: json
    status_code: [200, 201]
    headers:
      X-Api-Key: "{{ sonarr_api_key }}"
    body: "{{ item | combine({ 'fields': item.fields | dict2items(key_name='name', value_name='value') }) }}"
  loop: "{{ sonarr_indexers }}"
  when: "sonarr_indexers is defined and sonarr_indexers | length > 0"