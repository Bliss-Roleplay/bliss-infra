- name: Create {{ container_root }} data directory
  file:
    path: "{{ docker_dir }}/{{ item.container }}"
    state: directory
  loop: "{{ containers }}"

- include_tasks: get_docker_container_defaults.yml

- name: Get a list of container specific authelia rules
  delegate_to: localhost
  become: false
  set_fact:
    container_authelia_rules: "{{ container_authelia_rules | default([]) + [ item | combine({ 'authelia_rules': item.authelia_rules | map('combine', { 'domain': item.subdomain + '.' + swag_network_domains[item.network] }) }) ] }}"
  loop: "{{ container_defaults }}"
  when: item.subdomain is defined and item.network is defined and item.authelia_rules is defined

- name: Enable {{ container_root }} public ip bypass
  set_fact:
    authelia_public_ip_bypass: true
  notify:
    - disable ansible network
  changed_when: true

- name: Install {{ container_root }} configuration
  template:
    src: configuration.yml.j2
    dest: "{{ docker_dir }}/{{ item.container }}/configuration.yml"
  loop: "{{ containers }}"

- name: Install {{ container_root }} swag nginx location conf
  template:
    src: authelia-location.conf.j2
    dest: "{{ docker_dir }}/swag/{{ item.network }}/nginx/authelia-location.conf"
  loop: "{{ containers }}"

- name: Install {{ container_root }} swag nginx server conf
  template:
    src: authelia-server.conf.j2
    dest: "{{ docker_dir }}/swag/{{ item.network }}/nginx/authelia-server.conf"
  loop: "{{ containers }}"

- name: Restart swag containers
  docker_container:
    name: "swag_{{ item.network }}"
    state: started
    restart: true
  loop: "{{ containers }}"

- name: Restart {{ container_root }} containers
  docker_container:
    name: "{{ item.container }}"
    state: started
    restart: true
  loop: "{{ containers }}"