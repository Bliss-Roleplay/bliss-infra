- name: Get lldap groups
  uri:
    url: https://{{ lldap_domain }}/api/graphql
    method: POST
    status_code: 200
    headers: "{{ lldap_headers }}"
    body_format: json
    body:
      query: |
        groups {
          id
          displayName
          users {
            id
          }
        }
  register: result

- name: Get group {{ lldap_group }} information
  set_fact:
    lldap_group_info: result.json.data.groups | selectattr('displayName', 'defined') | selectattr('displayName', '==', lldap_group) | first

- name: Add user {{ lldap_user }} to group {{ lldap_group }}
  uri:
    url: https://{{ lldap_domain }}/api/graphql
    method: POST
    status_code: 200
    headers: "{{ lldap_headers }}"
    body_format: json
    body:
      operationName: CreateUser
      query: |
        mutation addUserToGroup($userId: String!, $groupId: Int!) {
          addUserToGroup(userId: $userId, groupId: $groupId) {
            ok
          }
        }
      variables:
        userId: "{{ lldap_user }}"
        groupId: "{{ lldap_group_info.id }}"
  when: lldap_group_info is defined and not (lldap_user in lldap_group_info.users)