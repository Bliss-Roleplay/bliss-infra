- name: Wait until {{ container }} config exists
  ansible.builtin.wait_for:
    path: "{{ docker_dir }}/{{ container }}/core.conf"
    search_regex: "\"enabled_plugins\""

- name: Stop {{ container }} container
  docker_container:
    name: "{{ container }}"
    state: stopped

- name: Set {{ container }} max upload speed
  lineinfile:
    path: "{{ docker_dir }}/{{ container }}/core.conf"
    search_string: "\"max_upload_speed\""
    line: "    \"max_upload_speed\": {{ deluge_max_upload }},"

- name: Set {{ container }} plugins
  lineinfile:
    path: "{{ docker_dir }}/{{ container }}/core.conf"
    regexp: "    \"enabled_plugins\": \\[\\],"
    line: "    \"enabled_plugins\": [ {{ '\"' + deluge_plugins | join('\", \"') + '\"' }} ],"

- name: Stop {{ container }} torrents at ratio
  lineinfile:
    path: "{{ docker_dir }}/{{ container }}/core.conf"
    search_string: "\"stop_seed_at_ratio\""
    line: "    \"stop_seed_at_ratio\": true,"
  when: deluge_stop_seed_ratio >= 0

- name: Set {{ container }} stop seed ratio
  lineinfile:
    path: "{{ docker_dir }}/{{ container }}/core.conf"
    search_string: "\"stop_seed_ratio\""
    line: "    \"stop_seed_ratio\": {{ deluge_stop_seed_ratio }},"
  when: deluge_stop_seed_ratio >= 0

- name: Start {{ container }} container
  docker_container:
    name: "{{ container }}"
    state: started

- name: Wait until {{ container }} web portal is available
  uri:
    url: "http://{{ deluge_address }}:{{ deluge_port }}/"
    method: GET
    status_code: 200
  register: result
  until: result.status == 200
  retries: 5
  delay: 20
